{"version":3,"file":"static/js/605.69b79727.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Dialogs/Dialogs.module.scss?d037","webpack://react-1/./src/components/Dialogs/Dialog/Dialog.module.scss?65ce","components/Dialogs/Dialog/Dialog.jsx","webpack://react-1/./src/components/Dialogs/Message/Message.module.scss?a735","components/Dialogs/Message/Message.jsx","webpack://react-1/./src/components/Dialogs/MessageForm/MessageForm.module.scss?b977","components/Dialogs/MessageForm/MessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"body\":\"Dialogs_body__svla1\",\"app\":\"Dialogs_app__m6RoX\",\"app__content\":\"Dialogs_app__content__+K98M\",\"app__menu\":\"Dialogs_app__menu__elasy\",\"app__route\":\"Dialogs_app__route__mw1uQ\",\"app__adv\":\"Dialogs_app__adv__Pg97I\",\"dialogs\":\"Dialogs_dialogs__EtziH\",\"dialogs__content\":\"Dialogs_dialogs__content__GgCui\",\"dialogs__dialogsDIV\":\"Dialogs_dialogs__dialogsDIV__6oTnp\",\"dialogs__dialogs\":\"Dialogs_dialogs__dialogs__wznrv\",\"dialogs__messagesDIV\":\"Dialogs_dialogs__messagesDIV__qi8qK\",\"dialogs__messages\":\"Dialogs_dialogs__messages__cVy5d\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Dialog_item__zxdtm\",\"item__img\":\"Dialog_item__img__gpDxg\",\"item__info\":\"Dialog_item__info__ghq0q\",\"item__name\":\"Dialog_item__name__fchlC\",\"item__message\":\"Dialog_item__message__C-gjb\",\"activeLink\":\"Dialog_activeLink__V+rG5\"};","import stl from './Dialog.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Dialog = ({id,name,message}) => {\r\n    return (\r\n        <NavLink to={'/messages/' + id} className={navData => navData.isActive ? stl.activeLink : stl.Link}>\r\n            <div className={stl.item}>\r\n                <div className={stl.item__img}>\r\n                    <img src='https://cdn-icons-png.flaticon.com/512/56/56745.png' alt='image1'></img>\r\n                </div>\r\n                <div className={stl.item__info}>\r\n                    <div className={stl.item__name}>{name}</div>\r\n                    <div className={stl.item__message}>{message}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default Dialog;","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"Message_body__kRYrs\",\"app\":\"Message_app__14Hky\",\"app__content\":\"Message_app__content__l0ziI\",\"app__menu\":\"Message_app__menu__eH9Wk\",\"app__route\":\"Message_app__route__-mDL3\",\"app__adv\":\"Message_app__adv__FrAZn\",\"message\":\"Message_message__SHRem\",\"message__user\":\"Message_message__user__T6Vpx\",\"message__text\":\"Message_message__text__5qEkl\",\"message__time\":\"Message_message__time__rpdKy\"};","import stl from './Message.module.scss';\r\n\r\nconst Message = ({name,text,time}) => {\r\n    return (\r\n        <div className={stl.message}>\r\n            <div className={stl.message__user}>{name}</div>\r\n            <div className={stl.message__text}>{text}</div>\r\n            <div className={stl.message__time}>{time}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"MessageForm_body__frSnv\",\"app\":\"MessageForm_app__2FaTM\",\"app__content\":\"MessageForm_app__content__mIvaT\",\"app__menu\":\"MessageForm_app__menu__RDlMy\",\"app__route\":\"MessageForm_app__route__N44B9\",\"app__adv\":\"MessageForm_app__adv__bbEd2\",\"messageForm\":\"MessageForm_messageForm__+nP8u\",\"textarea\":\"MessageForm_textarea__wAgDO\",\"error\":\"MessageForm_error__n+v6q\"};","import stl from './MessageForm.module.scss';\r\nimport React from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { required, maxLengthCreator, composeValidators } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst MessageForm = (props) => {\r\n    let onSubmit = (values) => {\r\n        props.addMessage(values.newMessage);\r\n        values.newMessage = '';\r\n    }\r\n\r\n    let validate = values => {\r\n        console.log(values);\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            validate={validate}\r\n            render={({ handleSubmit }) => (\r\n                <form className={stl.messageForm} onSubmit={handleSubmit}>\r\n                    <Field validate={composeValidators(required, maxLengthCreator(10))} name=\"newMessage\" placeholder='Сообщение' stl={stl} component={Textarea}></Field>\r\n                    <button>SEND</button>\r\n                </form>\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default MessageForm;","import stl from './Dialogs.module.scss';\r\nimport Dialog from './Dialog/Dialog';\r\nimport Message from './Message/Message';\r\nimport MessageForm from './MessageForm/MessageForm';\r\nimport React from 'react';\r\n\r\n\r\nconst Dialogs = ({dialogs, messages, addMessage}) => {\r\n    let dialogsElements = dialogs.map(element => {\r\n        return <Dialog key={`dialog${element.id}`} id={element.id} name={element.name} message={element.message}></Dialog>;\r\n    });\r\n\r\n    let messagesElements = messages.map(element => {\r\n        return <Message key={`message${element.id}`} name={element.name} text={element.text} time={element.time}></Message>;\r\n    });\r\n\r\n    return (\r\n        <header className={stl.dialogs}>\r\n            <div className={stl.dialogs__content}>\r\n                <div className={stl.dialogs__dialogsDIV}>\r\n                    <div className={stl.dialogs__dialogs}>\r\n                        {dialogsElements}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={stl.dialogs__messagesDIV}>\r\n                    <div className={stl.dialogs__messages}>\r\n                        {messagesElements}\r\n                    </div>\r\n                    <MessageForm addMessage={addMessage}></MessageForm>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport {addMessageActionCreator} from '../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport {compose} from 'redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (message) => {\r\n            dispatch(addMessageActionCreator(message));\r\n        }\r\n    }\r\n};\r\n\r\nconst DialogsContainer = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (this.props.isAuth === false) {\r\n                return <Navigate to='/login'></Navigate>\r\n            }\r\n            else{\r\n                return <Component {...this.props}></Component>\r\n            }\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirect = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirect;\r\n}"],"names":["id","name","message","to","className","navData","isActive","stl","src","alt","text","time","props","onSubmit","values","addMessage","newMessage","validate","console","log","render","handleSubmit","composeValidators","required","maxLengthCreator","placeholder","component","Textarea","dialogs","messages","dialogsElements","map","element","messagesElements","compose","connect","state","dialogsPage","dispatch","addMessageActionCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}